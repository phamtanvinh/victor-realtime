version: "3"

services:
#####################################################
# Kafka Area
#####################################################
  zookeeper: 
    image: confluentinc/cp-zookeeper:latest
    ports:
      - 2181:2181
      - 2888:2888
      - 3888:3888
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
  
  broker:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0

  schema-registry:
    image: confluentinc/cp-schema-registry:latest
    depends_on:
      - broker
    ports:
      - 8081:8081
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://broker:9092
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: zookeeper:2181
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081

  connect:
    image: victor/connect
    build:
      context: ./connect
    ports:
      - 8083:8083
      - 5005:5005
    links:
      - broker
      - schema-registry
    environment:
      BOOTSTRAP_SERVERS: broker:9092
      GROUP_ID: 1
      ADVERTISED_HOST_NAME: connect
      CONFIG_STORAGE_TOPIC: my_connect_configs
      OFFSET_STORAGE_TOPIC: my_connect_offset
      STATUS_STORAGE_TOPIC: my_source_connect_status
      KAFKA_CONNECT_PLUGINS_DIR: /kafka/connect,/kafka/plugins
  
  # take a lot of time to build, you can disable below service if unnecessary
  kafka-manager:
    image: victor/kafka-manager
    build:
      context: ./kafka-manager
      args:
        KM_VERSION: 2.0.0.2
    ports:
      - 29000:9000
    depends_on:
      - zookeeper
    links:
      - zookeeper
    environment:
      ZK_HOSTS: zookeeper:2181
  
  ksql-server:
    image: confluentinc/cp-ksql-server
    depends_on:
      - broker
      - schema-registry
    environment:
      KSQL_BOOTSTRAP_SERVERS: broker:9092
      KSQL_LISTENERS: http://0.0.0.0:8088
      KSQL_KSQL_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      
  ksql-cli:
    image: confluentinc/cp-ksql-cli
    depends_on:
      - ksql-server
    entrypoint: /bin/sh
    tty: true    
    


#####################################################
# Database Area
#####################################################
  mysql:
    image: victor/mysql
    build:
      context: ./mysql
    privileged: true
    ports:
      - 3306:3306
    environment:
      MYSQL_ROOT_PASSWORD: Aa123456
      MYSQL_USER: mysqluser
      MYSQL_PASSWORD: mysqlpw
    volumes:
      - mysql_data:/var/lib/mysql
  
  postgres:
    image: victor/postgres
    build:
      context: ./postgres
    command: postgres -c config_file=/usr/share/postgresql/postgres.conf
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: postgresuser
      POSTGRES_PASSWORD: postgrespw
      POSTGRES_DB: inventory
    volumes: 
      - pg_data:/var/lib/postgresql/data
  
  pgadmin:
    image: dpage/pgadmin4
    ports: 
      - 8080:80
    links: 
      - postgres
    environment: 
      PGADMIN_DEFAULT_EMAIL: phamtanvinh.me@gmail.com
      PGADMIN_DEFAULT_PASSWORD: Aa123456
      PGADMIN_CONFIG_ENHANCED_COOKIE_PROTECTION: 'True'
      PGADMIN_CONFIG_CONSOLE_LOG_LEVEL: 10  
    volumes:
      - pgadmin_data:/var/lib/pgadmin

  es6:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.8.4
    ports:
     - 9200:9200
    environment:
      http.host: 0.0.0.0
      transport.host: 127.0.0.1
      xpack.security.enabled: 'false'
      ES_JAVA_OPTS: '-Xms512m -Xmx512m'
    volumes:
      - es6_data:/usr/share/elasticsearch/data

  kibana:
    image: docker.elastic.co/kibana/kibana:6.8.4
    ports: 
      - 5601:5601
    depends_on: 
      - es6
    links: 
      - es6
    environment: 
      ELASTICSEARCH_HOSTS: http://es6:9200

  es7:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.4.2
    ports:
     - 29200:9200
    environment:
      discovery.type: single-node
      http.host: 0.0.0.0
      transport.host: 127.0.0.1
      xpack.security.enabled: 'false'
      ES_JAVA_OPTS: '-Xms512m -Xmx512m'
    volumes:
      - es7_data:/usr/share/elasticsearch/data
  
  kibana7:
    image: docker.elastic.co/kibana/kibana:7.4.2
    ports: 
      - 25601:5601
    depends_on: 
      - es7
    links: 
      - es7
    environment: 
      ELASTICSEARCH_HOSTS: http://es7:9200  
      
  cassandra:
    image: victor/cassandra
    build:
      context: ./cassandra
    ports:
      - 7000:7000
      - 9042:9042
    links:
      - schema-registry
    environment:
      MAX_HEAP_SIZE: 256M
      HEAP_NEWSIZE: 128M
    volumes:
      - cassandra_data:/var/lib/cassandra
    healthcheck:
      test: ["CMD-SHELL", "[ $$(nodetool statusgossip) = running ]"]
    ulimits:
      nproc: 1024

volumes: 
  mysql_data: {}
  pg_data: {}
  es6_data: {}
  es7_data: {}
  cassandra_data: {}
  pgadmin_data: {}