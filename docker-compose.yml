version: '3'

services:
  cassandra:
    image: cassandra
    container_name: cassandra
    hostname: cassandra-1
    ports:
      - 7000:7000
      - 9042:9042
    networks:
      - cassandra_net
    volumes:
      - cassandra1_data:/var/lib/cassandra:rw
    ulimits:
      nproc: 1024

  zookeeper:
    image: confluentinc/cp-zookeeper
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - 2181:2181
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka
    hostname: kafka
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
      - 29092:29092
      - 39092:39092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT,PLAINTEXT_HOST2:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092,PLAINTEXT_HOST2://192.168.56.100:39092
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  schema-registry:
    image: confluentinc/cp-schema-registry
    hostname: schema-registry
    container_name: schema-registry
    depends_on:
      - zookeeper
      - kafka
    ports:
      - 8081:8081
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka:29092
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: 'zookeeper:2181'

networks:
  cassandra_net:
    external: true

volumes:
  cassandra1_data:
    external: true
  cassandra2_data:
    external: true
# docker run -it --rm --network cassandra_net cassandra cqlsh -u cassandra -p cassandra cassandra
# docker run -e DS_LICENSE=accept --network cassandra_net --name dse-studio -p 9091:9091 -d datastax/dse-studio
# docker exec -it --privileged cassandra sh -c 'echo authenticator: PasswordAuthenticator >> /etc/cassandra/cassandra.yaml'
# docker exec -it --privileged cassandra service cassandra restart
